stages:
  - build
  # - deploy
build:
  stage: build
  image: docker:latest
  services:
  - name: docker:dind
  script:
    - docker pull jtp03a/jpeterson-dev:latest || true
    - docker build --cache-from jtp03a/jpeterson-dev:latest --tag jtp03a/jpeterson-dev:latest .
    - docker push jtp03a/jpeterson-dev:latest
# deploy:
  # stage: deploy
  # image: google/cloud-sdk
  # image: jtp03a/kubectl:latest
  # script:
    # Connect to a GCP Cluster
    # - echo $GCP_SERVICE_KEY > gcloud-service-key.json
    # - gcloud auth activate-service-account --key-file gcloud-service-key.json
    # - gcloud config set project $GCP_PROJECT_ID
    # - gcloud container clusters get-credentials jp-ap-cluster-1 --zone=us-central1
    # Connect to Home Cluster
    # - kubectl config set-cluster jake-k8s --server="${K8S_SERVER}"
    # - kubectl config set clusters.sst-jake-k8s.certificate-authority-data ${K8S_CAD}
    # - kubectl config set-credentials jake-k8s --token="${K8S_TOKEN}"
    # - kubectl config set-context jake-k8s --cluster=jake-k8s --user=admin
    # - kubectl config use-context jake-k8s
    # - kubectl config current-context
    # - kubectl delete deployment jpeterson-dev
    # - kubectl delete secret mongodb-secrets
    # - kubectl delete secret jwt-secrets
    # - kubectl delete secret pexel-secrets
    # - echo -n $MONGODB_CONN > dbconn.txt
    # - echo -n $JWT_SECRET > jwtsecret.txt
    # - kubectl create secret generic mongodb-secrets --from-file=mongodb_conn=./dbconn.txt
    # - kubectl create secret generic jwt-secrets --from-file=jwt_secret=./jwtsecret.txt
    # - kubectl create secret generic pexel-secrets --from-literal=pexel_key=${PEXEL_KEY}
    # - kubectl apply -f service.yaml
    # - kubectl apply -f jpeterson-dev-deploy.yaml
